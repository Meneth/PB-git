## normal scopes(including posttitle scopes) ##
# ROOT = receiver
# FROM = giver
# <no scope change> = attacker or receiver
## title scopes ##
# ROOT = receiver
# FROM = giver
# <no scope change> = thirdparty landed title	
#
# the following effects/triggers exists (example execution order: on_success->on_success_title->on_success_posttitle):
# is_valid, is_valid_title, on_add, on_add_title, on_add_posttitle, on_success, on_success_title, on_success_posttitle, on_fail, on_fail_title, on_fail_posttitle, on_reverse_demand, on_reverse_demand_title, on_reverse_demand_posttitle
#
# Added on_attacker_leader_death, on_defender_leader_death and on_thirdparty_death, which all trigger when corresponding character dies
# These three all have war scopes, which currently has the following scope changes: 
# attacker, defender, thirdparty(only valid if thirdparty character is involved), thirdparty_title(only valid if thirdparty title is involved)
#
# ai_will_do: modifies value AI places on the CB compared to other CBs (default: 1)
# can_use_gui: If otherwise valid, the CB is listed in the Diplo View, but you can't declare war unless 'can_use_gui' is also valid (also shows a trigger tooltip.)


claim_on_liege_plot = {
	name = CB_NAME_CLAIM
	war_name = WAR_NAME_CLAIM_LIEGE
	sprite = 3
	truce_days = 1825
	hostile_against_others = yes

	press_claim = yes
	major_revolt = yes
	attacker_can_call_allies = no
	can_ask_to_join_war = no
	
	can_use_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}

	is_valid_title = {
		OR = {
			FROM = {
				has_landed_title = PREV
			}
			holder_scope = {
				is_liege_or_above = FROM
			}
		}
	}

	on_add = {
		# EMF: Adjust dynlevy laws due to realm fracture
		hidden_tooltip = { ROOT = { character_event = { id = emf_dynlevy.4 } } }
	}
	
	on_success = {
		hidden_tooltip = { ROOT = { add_character_modifier = { name = emf_victory_timer duration = 7 hidden = yes } } }
		
		# EMF: Adjust dynlevy laws due to realm fracture
		hidden_tooltip = { ROOT = { character_event = { id = emf_dynlevy.4 } } }
		
		any_attacker = {
			limit = { character = ROOT }
			participation_scaled_prestige = 100
			hidden_tooltip = {
				disband_event_forces = faction_revolters
			}
		}
		any_attacker = {
			limit = { NOT = { character = ROOT } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
			hidden_tooltip = {
				disband_event_forces = faction_revolters
			}
		}
		
		FROM = {
			
			hidden_tooltip = { disband_event_forces = faction_loyalists }
		
			any_demesne_title = { # All titles
				limit = {
					OR = {
						tier = king
						tier = emperor
					}
#					is_titular = no
					OR = {
						NOT = { has_law = crown_levies_0 }
						NOT = { has_law = revokation_0 }
						NOT = { has_law = inheritance_0 }
						AND = {
							NOT = { has_law = king_peace_0 }
							NOT = { has_law = emperor_peace_0 }
						}
					}
				}
				
				if = {
					limit = {
						OR = {
							has_law = king_peace_0
							has_law = emperor_peace_0
						}
						has_law = revokation_0
						has_law = crown_levies_0
					}
					add_law = inheritance_0
				}
				if = {
					limit = {
						has_law = crown_levies_1
						OR = {
							has_law = king_peace_0
							has_law = emperor_peace_0
						}
						has_law = revokation_0
					}
					add_law = crown_levies_0
				}
				if = {
					limit = {
						has_law = crown_levies_2
						OR = {
							has_law = king_peace_0
							has_law = emperor_peace_0
						}
						has_law = revokation_0
					}
					add_law = crown_levies_1
				}
				if = {
					limit = {
						has_law = crown_levies_3
						OR = {
							has_law = king_peace_0
							has_law = emperor_peace_0
						}
						has_law = revokation_0
					}
					add_law = crown_levies_2
				}
				if = {
					limit = {
						has_law = crown_levies_4
						OR = {
							has_law = king_peace_0
							has_law = emperor_peace_0
						}
						has_law = revokation_0
					}
					add_law = crown_levies_3
				}
				if = {
					limit = {
						OR = {
							has_law = revokation_1
							has_law = revokation_2
						}
						OR = {
							has_law = king_peace_0
							has_law = emperor_peace_0
						}
					}
					add_law = revokation_0
				}
				if = {
					limit = {
						OR = {
							has_law = king_peace_1
							has_law = king_peace_2
						}
					}
					add_law = king_peace_0
				}
				if = {
					limit = {
						OR = {
							has_law = emperor_peace_1
							has_law = emperor_peace_2
						}
					}
					add_law = emperor_peace_0
				}	
			}
		}
	}
	
	on_success_title = {
		usurp_title_plus_barony_if_unlanded = { target = ROOT type = claim }
		
		if = {
			limit = {
				higher_tier_than = BARON
				NOT = { culture = ROOT }
			}
			hidden_tooltip = { conquest_culture = ROOT }
		}
		ROOT = {
			plot_succeeds = yes
		}
	}

	on_fail = {
		# EMF: Adjust dynlevy laws due to realm fracture
		hidden_tooltip = { ROOT = { character_event = { id = emf_dynlevy.4 } } }
		
		ROOT = {
			prestige = -100
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 50
			hidden_tooltip = {
				disband_event_forces = faction_revolters
			}
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 50 }
			hidden_tooltip = {
				disband_event_forces = faction_revolters
			}
		}
		
		FROM = { hidden_tooltip = { disband_event_forces = faction_loyalists } }
	}

	on_reverse_demand = {
		hidden_tooltip = { FROM = { add_character_modifier = { name = emf_victory_timer duration = 7 hidden = yes } } }
		
		# EMF: Adjust dynlevy laws due to realm fracture
		hidden_tooltip = { ROOT = { character_event = { id = emf_dynlevy.4 } } }
		
		ROOT = {
			prestige = -200
			imprison = FROM
		}
		any_defender = {
			limit = { character = FROM }
			participation_scaled_prestige = 100
			hidden_tooltip = {
				disband_event_forces = faction_revolters
			}
		}
		any_defender = {
			limit = { NOT = { character = FROM } }
			hidden_tooltip = { participation_scaled_prestige = 100 }
			hidden_tooltip = {
				disband_event_forces = faction_revolters
			}
		}
		
		FROM = { hidden_tooltip = { disband_event_forces = faction_loyalists } }
	}
	
	on_attacker_leader_death = {
		hidden_tooltip = {
			any_defender = {
				letter_event = {
					id = 251
				}
			}
		}
		end_war = invalid

		# EMF: Adjust dynlevy laws due to realm fracture
		hidden_tooltip = { ROOT = { character_event = { id = emf_dynlevy.4 } } }
	}
	
	attacker_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	attacker_ai_defeat_worth = {
		factor = 100
	}

	defender_ai_victory_worth = {
		factor = -1 # always accept
	}
	
	defender_ai_defeat_worth = {
		factor = 100
	}
	
	is_valid = {
		ROOT = {
			OR = {
				liege = {
					character = PREV # either independent
				}
				liege = { 
					FROM = { 
						is_liege_or_above = PREV # or have shared liege
					}
				}
			}
		}
	}
}
